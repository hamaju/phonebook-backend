{"version":3,"sources":["components/Input.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Input","name","value","onChange","Filter","filter","handleFilterChange","type","PersonForm","onSubmit","Person","person","handlePersonDelete","number","onClick","id","Persons","persons","toLowerCase","includes","map","Notification","notification","className","message","baseUrl","personService","getAll","axios","get","then","res","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","initialPersons","notify","setTimeout","event","target","preventDefault","newPerson","some","find","updatedPerson","window","confirm","updatedPersons","catch","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc9ba45.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({ name, value, onChange }) => {\n  return (\n    <div>\n      {name} <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Filter = ({ name, filter, handleFilterChange }) => {\n  return (\n    <div>\n      {name} <input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <button type=\"submit\">add</button>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ person, handlePersonDelete }) => {\n  return (\n    <li>\n      {person.name} {person.number}{' '}\n      <button onClick={() => handlePersonDelete(person.id)}>del</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ persons, filter, handlePersonDelete }) => {\n  return (\n    <ul>\n      {persons\n        .filter((person) => person.name.toLowerCase().includes(filter))\n        .map((person) => (\n          <Person\n            key={person.name}\n            person={person}\n            handlePersonDelete={handlePersonDelete}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  return <div className={notification.type}>{notification.message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const req = axios.post(baseUrl, newObject);\n  return req.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject);\n  return req.then((res) => res.data);\n};\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`);\n  return req.then((res) => res.data);\n};\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  remove,\n};\n\nexport default personService;\n","import React, { useState, useEffect } from 'react';\nimport Input from './components/Input';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const notify = (message, type = 'primary') => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    \n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const personExists = persons.some((person) => person.name === newName);\n\n    if (personExists) {\n      const person = persons.find((person) => person.name === newName);\n      const { id } = person;\n      const updatedPerson = { ...person, number: newNumber };\n\n      const confirmPersonUpdate = window.confirm(\n        `${newName} already exists, replace the old number with a new one?`\n      );\n\n      if (confirmPersonUpdate) {\n        personService\n          .update(id, updatedPerson)\n          .then(() => {\n            personService\n              .getAll()\n              .then((updatedPersons) => setPersons(updatedPersons));\n          })\n          .catch(() => {\n            notify(\n              `Information of ${person.name} has already been removed from the server`,\n              'error'\n            );\n            setPersons(persons.filter((person) => person.id !== id));\n          });\n\n        setNewName('');\n        setNewNumber('');\n      }\n    } else {\n      personService.create(newPerson).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        notify(`Added ${newPerson.name}`);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value.toLowerCase());\n  };\n\n  const handlePersonDelete = (id) => {\n    const person = persons.find((person) => person.id === id);\n    const confirmRemoval = window.confirm(`Delete ${person.name}?`);\n\n    if (confirmRemoval) {\n      personService.remove(id).then(() => {\n        personService\n          .getAll()\n          .then((updatedPersons) => setPersons(updatedPersons));\n      });\n\n      notify(`Removed ${person.name}`);\n      setFilter('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Filter\n        name=\"filter shown with\"\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add new</h2>\n      <Input name=\"name\" value={newName} onChange={handleNameChange} />\n      <Input name=\"number\" value={newNumber} onChange={handleNumberChange} />\n      <PersonForm onSubmit={addPerson} />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filter={filter}\n        handlePersonDelete={handlePersonDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}